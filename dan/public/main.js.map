{
  "version": 3,
  "sources": ["../src/outputItemElement.ts", "../src/validateForm.ts", "../src/index.ts"],
  "sourcesContent": ["export default class OutputItemElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    const shadow = this.attachShadow({ mode: \"open\" });\n    shadow.innerHTML = this.render();\n    shadow\n      .querySelector(\"button\")!\n      .addEventListener(\"click\", () => this.remove());\n  }\n  render() {\n    return /*html*/ `\n      <style>\n        :host {\n          align-items: center;\n          display: flex;\n          gap: 0.5rem;\n          justify-content: space-between;\n        }\n        slot {\n          word-break: break-word;\n        }\n      </style>\n      <slot></slot>\n      <button title=\"Remove\">\uD83D\uDDD1\uFE0F</button>\n    `;\n  }\n}\n\ncustomElements.define(\"output-item\", OutputItemElement);\n", "export class FormError extends Error {}\n\n// @note Some simple regular expressions.\nconst emailRegExp =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\nconst telRegExp = /^[0-9()-]+$/;\n\n/**\n * @note The usual thing to do here would be to take advantage of the in built browser\n * validations and then validate the data on the server before processing because this\n * code is still living on the client's machine. This is just being done for examination\n * purposes.\n */\nexport default function validateForm(form: HTMLFormElement) {\n  const formData = new FormData(form);\n  const name = formData.get(\"name\")?.toString();\n  if (!name || name === \"\") throw new FormError(\"Name is required.\");\n  const email = formData.get(\"email\")?.toString();\n  if (!email || email === \"\") throw new FormError(\"Email is required.\");\n  if (!emailRegExp.test(email)) throw new FormError(\"Email is not valid.\");\n  const birthdate = formData.get(\"birthdate\")?.toString();\n  if (!birthdate || birthdate === \"\")\n    throw new FormError(\"Date of birth is required.\");\n  const tel = formData.get(\"tel\")?.toString();\n  if (!tel || tel === \"\") throw new FormError(\"Phone is required.\");\n  if (!telRegExp.test(tel)) throw new FormError(\"Phone number is not valid.\");\n  return { name, email, birthdate, tel };\n}\n", "import \"outputItemElement\";\nimport validateForm, { FormError } from \"validateForm\";\n\n// @note I'm hijacking the submission because there's no server.\ndocument.querySelector(\"form\")!.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  try {\n    this.error.innerText = \"\";\n    const outputItemElement = document.createElement(\"output-item\");\n    outputItemElement.innerText = JSON.stringify(validateForm(this));\n    this.data.append(outputItemElement);\n    this.reset();\n  } catch (error) {\n    if (error instanceof FormError) this.error.innerText = error.message;\n    else this.error.innerText = \"Unexpected error.\";\n  }\n});\n"],
  "mappings": "mBAAA,IAAqBA,EAArB,cAA+C,WAAY,CACzD,aAAc,CACZ,MAAM,CACR,CACA,mBAAoB,CAClB,IAAMC,EAAS,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EACjDA,EAAO,UAAY,KAAK,OAAO,EAC/BA,EACG,cAAc,QAAQ,EACtB,iBAAiB,QAAS,IAAM,KAAK,OAAO,CAAC,CAClD,CACA,QAAS,CACP,MAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAelB,CACF,EAEA,eAAe,OAAO,cAAeD,CAAiB,EC9B/C,IAAME,EAAN,cAAwB,KAAM,CAAC,EAGhCC,EACJ,uEACIC,EAAY,cAQH,SAARC,EAA8BC,EAAuB,CAC1D,IAAMC,EAAW,IAAI,SAASD,CAAI,EAC5BE,EAAOD,EAAS,IAAI,MAAM,GAAG,SAAS,EAC5C,GAAI,CAACC,GAAQA,IAAS,GAAI,MAAM,IAAIN,EAAU,mBAAmB,EACjE,IAAMO,EAAQF,EAAS,IAAI,OAAO,GAAG,SAAS,EAC9C,GAAI,CAACE,GAASA,IAAU,GAAI,MAAM,IAAIP,EAAU,oBAAoB,EACpE,GAAI,CAACC,EAAY,KAAKM,CAAK,EAAG,MAAM,IAAIP,EAAU,qBAAqB,EACvE,IAAMQ,EAAYH,EAAS,IAAI,WAAW,GAAG,SAAS,EACtD,GAAI,CAACG,GAAaA,IAAc,GAC9B,MAAM,IAAIR,EAAU,4BAA4B,EAClD,IAAMS,EAAMJ,EAAS,IAAI,KAAK,GAAG,SAAS,EAC1C,GAAI,CAACI,GAAOA,IAAQ,GAAI,MAAM,IAAIT,EAAU,oBAAoB,EAChE,GAAI,CAACE,EAAU,KAAKO,CAAG,EAAG,MAAM,IAAIT,EAAU,4BAA4B,EAC1E,MAAO,CAAE,KAAAM,EAAM,MAAAC,EAAO,UAAAC,EAAW,IAAAC,CAAI,CACvC,CCvBA,SAAS,cAAc,MAAM,EAAG,iBAAiB,SAAU,SAAUC,EAAO,CAC1EA,EAAM,eAAe,EACrB,GAAI,CACF,KAAK,MAAM,UAAY,GACvB,IAAMC,EAAoB,SAAS,cAAc,aAAa,EAC9DA,EAAkB,UAAY,KAAK,UAAUC,EAAa,IAAI,CAAC,EAC/D,KAAK,KAAK,OAAOD,CAAiB,EAClC,KAAK,MAAM,CACb,OAASE,EAAO,CACVA,aAAiBC,EAAW,KAAK,MAAM,UAAYD,EAAM,QACxD,KAAK,MAAM,UAAY,mBAC9B,CACF,CAAC",
  "names": ["OutputItemElement", "shadow", "FormError", "emailRegExp", "telRegExp", "validateForm", "form", "formData", "name", "email", "birthdate", "tel", "event", "outputItemElement", "validateForm", "error", "FormError"]
}
